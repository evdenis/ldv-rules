@include "../ldv.aspect"

before: file("$this")
{

void check_in_interrupt( void );
}

around: define(on_each_cpu(func,info,wait))
{
   ({ check_in_interrupt(); 0; })
}

after: call(int on_each_cpu(..))
{
   check_in_interrupt();
}

after: call(static inline void __raw_spin_lock_irq(..))
{
   check_in_interrupt();
}

after: call(void _raw_spin_lock_irq(..))
{
   check_in_interrupt();
}

around: define(raw_spin_lock_irq(lock))
{
   ({ check_in_interrupt(); 0; })
}

after: call(static inline void spin_lock_irq(..))
{
   check_in_interrupt();
}

after: call(static inline void __raw_spin_unlock_irq(..))
{
   check_in_interrupt();
}

after: call(void _raw_spin_unlock_irq(..))
{
   check_in_interrupt();
}

around: define(raw_spin_unlock_irq(lock))
{
   ({ check_in_interrupt(); 0; })
}

after: call(static inline void spin_unlock_irq(..))
{
   check_in_interrupt();
}


new: file(LDV_COMMON_MODEL)
{

#include "../ldv.h"

extern int LDV_IN_INTERRUPT;

void
check_in_interrupt( void )
{
   ldv_assert( LDV_IN_INTERRUPT == 1 );
}

}

