before: file("$this")
{
#include <verifier/rcv.h>

extern void ldv_check( void );
extern void ldv_in_de_pair( void );
extern void ldv_out_de_pair( void );
extern void ldv_in_sr_pair( void );
extern void ldv_out_sr_pair( void );
}

around: define( local_irq_disable() )
{
   ldv_in_de_pair()
}

around: define( local_irq_enable() )
{
   ldv_out_de_pair()
}

around: define( local_irq_save(flags) )
{
   ldv_in_sr_pair()
}

around: define( local_irq_restore(flags) )
{
   ldv_out_sr_pair()
}

around: define( spin_lock_irqsave(lock, flags) )
{
   ldv_in_sr_pair()
}

around: define( spin_lock_irqsave_nested(lock, flags, subclass) )
{
   ldv_in_sr_pair()
}

around: define( spin_trylock_irqsave(lock, flags) )
{
   ({
      if ( ldv_undef_int() > 0 ) {
         ldv_in_sr_pair();
         1;
      } else {
         0;
      }
   })
}

around: execution( static inline int spin_trylock_irq(..) )
{
   if ( ldv_undef_int() > 0 ) {
      ldv_in_de_pair();
      return 1;
   } else {
      return 0;
   }
}

around: execution( static inline void spin_unlock_irqrestore(..) )
{
   ldv_out_sr_pair();
}

around: execution( static inline void spin_lock_irq(..) )
{
   ldv_in_de_pair();
}

around: execution( static inline void spin_unlock_irq(..) )
{
   ldv_out_de_pair();
}

new: file(LDV_COMMON_MODEL)
{

#include <verifier/rcv.h>

/* LDV_COMMENT_MODEL_STATE Indicates the level of local_irq_disable/local_irq_enable nesting.*/
int ldv_inside_de_pair = 0;
/* LDV_COMMENT_MODEL_STATE Indicates the level of local_irq_save/local_irq_restore nesting.*/
int ldv_inside_sr_pair = 0;

/* LDV_COMMENT_MODEL_STATE Indicates that irq_disable has been called.*/
int ldv_d_flag = 0;
/* LDV_COMMENT_MODEL_STATE Indicates that irq_save has been called.*/
int ldv_s_flag = 0;

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_in_de_pair') Entry in disable/enable section.*/
void
ldv_in_de_pair( void )
{
   /* LDV_COMMENT_CHANGE_STATE Increments the level of disable/enable nesting.*/
   ++ldv_inside_de_pair;
   
   ldv_assert( ldv_d_flag != 1 );
   ldv_d_flag = 1;

   ldv_assert( ldv_s_flag != 1 );
}

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_out_de_pair') Exit from disable/enable section.*/
void
ldv_out_de_pair( void )
{
   /* LDV_COMMENT_CHANGE_STATE Decrements the level of disable/enable nesting.*/
   --ldv_inside_de_pair;
   
   ldv_d_flag = 0;
   ldv_s_flag = 0;
}

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_in_sr_pair') Entry in save/restore section.*/
void
ldv_in_sr_pair( void )
{
   /* LDV_COMMENT_CHANGE_STATE Increments the level of save/restore nesting.*/
   ++ldv_inside_sr_pair;
   ldv_d_flag = 0;
   ldv_s_flag = 1;
}

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_out_sr_pair') Exit from save/restore section.*/
void
ldv_out_sr_pair( void )
{
   /* LDV_COMMENT_CHANGE_STATE Decrements the level of save/restore nesting.*/
   --ldv_inside_sr_pair;
   
   ldv_assert( ldv_d_flag != 1 );
   
   ldv_s_flag = 0;
}

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_check') Checks that the caller is outside enable/disable and save/restore sections.*/
void
ldv_check( void )
{
   /* LDV_COMMENT_ASSERT local_irq_enable function should not be called inside disable/enable and save/restore sections.*/
   ldv_assert( ldv_inside_de_pair == 0 && ldv_inside_sr_pair == 0 );
}

/* LDV_COMMENT_MODEL_FUNCTION_DEFINITION(name='ldv_check_final_state') Checks that for each disable/save there is enable/restore.*/
void
ldv_check_final_state( void )
{
   ldv_check();
}

}
